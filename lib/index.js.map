{"version":3,"sources":["../src/index.js"],"names":["lcd","LcdPlate","lastState","setup","backlight","colors","RED","message","run","on","button","buttonName","clear"],"mappings":"AAAA;;AAEA;;AAEA;;AAOA,MAAMA,GAAG,GAAG,IAAIC,qBAAJ,CAAa,CAAb,EAAgB,IAAhB,CAAZ;AACA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,CAAC,SAASC,KAAT,GAAiB;AAChBH,EAAAA,GAAG,CAACI,SAAJ,CAAcJ,GAAG,CAACK,MAAJ,CAAWC,GAAzB;AACAN,EAAAA,GAAG,CAACO,OAAJ,CAAY,mCAAZ;AACA,mCAAe;AAACP,IAAAA;AAAD,GAAf;AACD,CAJD;;AAMA,CAAC,eAAeQ,GAAf,GAAqB;AACnB;AACF,CAFD;;AAIAR,GAAG,CAACS,EAAJ,CAAO,eAAP,EAAwB,gBAAeC,MAAf,EAAuB;AAC7C,QAAM,mCAAN;;AACA,UAAQV,GAAG,CAACW,UAAJ,CAAeD,MAAf,CAAR;AACE,SAAK,QAAL;AACE,UAAIR,SAAS,KAAK,QAAlB,EAA4B;AAC1BA,QAAAA,SAAS,GAAG,QAAZ;AACAF,QAAAA,GAAG,CAACY,KAAJ;AACD;;AACD;AACA;;AACF,SAAK,MAAL;AACE,UAAIV,SAAS,KAAK,MAAlB,EAA0B;AACxBA,QAAAA,SAAS,GAAG,MAAZ;AACAF,QAAAA,GAAG,CAACY,KAAJ;AACD;;AACD,iCAAS,YAAT;AACA;;AACF,SAAK,OAAL;AACE,UAAIV,SAAS,KAAK,OAAlB,EAA2B;AACzBA,QAAAA,SAAS,GAAG,OAAZ;AACAF,QAAAA,GAAG,CAACY,KAAJ;AACD;;AACD,iCAAS,YAAT;AACA;;AACF,SAAK,IAAL;AACE,UAAIV,SAAS,KAAK,IAAlB,EAAwB;AACtBA,QAAAA,SAAS,GAAG,IAAZ;AAAiB;AAClB;;AACD,iCAAS,QAAT;AACA;;AACF,SAAK,MAAL;AACE,UAAIA,SAAS,KAAK,MAAlB,EAA0B;AACxBA,QAAAA,SAAS,GAAG,MAAZ;AAAmB;AACpB;;AACD,iCAAS,MAAT;AACA;;AACF;AACEF,MAAAA,GAAG,CAACO,OAAJ,CAAY,sBAAsBP,GAAG,CAACW,UAAJ,CAAeD,MAAf,CAAlC,EAA0D,IAA1D;AAnCJ,GAF6C,CAuC7C;;AACD,CAxCD","sourcesContent":["'use strict';\n\nimport { plate as LcdPlate } from 'adafruit-i2c-lcd';\n\nimport {\n  startCycleStates,\n  stopCycleStates,\n  setState,\n  initCycleState\n} from './cyclestates.functions'\n\nconst lcd = new LcdPlate(1, 0x20);\nlet lastState = null;\n\n(function setup() {\n  lcd.backlight(lcd.colors.RED);\n  lcd.message('LCD Status - By \\n Giorgio Pillon');\n  initCycleState({lcd});\n})();\n \n(async function run() {\n   startCycleStates();\n})();\n \nlcd.on('button_change', async function(button) {\n  await stopCycleStates();\n  switch (lcd.buttonName(button)) {\n    case 'SELECT':\n      if (lastState !== 'SELECT') {\n        lastState = 'SELECT';\n        lcd.clear(); \n      }      \n      startCycleStates();\n      break;\n    case 'DOWN':\n      if (lastState !== 'DOWN') {\n        lastState = 'DOWN';\n        lcd.clear(); \n      }\n      setState('internalIp');\n      break;\n    case 'RIGHT':\n      if (lastState !== 'RIGHT') {\n        lastState = 'RIGHT';\n        lcd.clear(); \n      }\n      setState('externalIp');\n      break;\n    case 'UP':\n      if (lastState !== 'UP') {\n        lastState = 'UP';; \n      }\n      setState('cpuram');\n      break;\n    case 'LEFT':\n      if (lastState !== 'LEFT') {\n        lastState = 'LEFT';; \n      }\n      setState('disk');\n      break;\n    default:\n      lcd.message('Button changed:\\n' + lcd.buttonName(button), true);\n  }\n  //lcd.message('Button changed:\\n' + lcd.buttonName(button));\n});"],"file":"index.js"}